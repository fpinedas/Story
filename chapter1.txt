It was the best of times, it was the worst of times.

git init: Initializes a new Git repository in the working directory.
git status: Show the status of the working directory.
git add <file>: Add a file to the staging area. 
                Needed to add a new file to the repository or when modify a file.
git commit - m "Commit message": Commits changes to the staging area with a descriptive message.
git log: Shows executed git commits. The commit with the "HEAD -> master" annotations appoint to
         the last commit executed (current state).
git diff <file>: Show differences in a file in the working directory with the repository version.
git checkout <file>: Restores a file in the working directory with the repository version.
                     This discards all changes on the file and it is overwritten with the
                     repository version of the file.

**** 
Push an existing repository from the command line to GitHub:

git remote add origin https://github.com/fpinedas/Story.git
                            # create remote repository with name "origin".
git branch -M main          # 
git push -u origin main     # -u flag means bind local repository to remote repository.

Working Directory -> Staging Area -> Local Git Repository -> Remote GitHub Repository

****
git clone <GitHub Repository>: clone a GitHub Repository on local disk.

****
git branch: show git branches on working directory.
git branch <new-branch>: create a new branch on repository.
git checkout <branch>: switch to the specified <branch>. 
                       So, next git commands applies to this <branch>.
git merge <branch>: merge changes made on <branch> into the current branch.
                    So, if you want merge changes on "main" branch, previously
                    you must execute a "git checkout main" command.